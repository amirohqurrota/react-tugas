{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamid\\\\Documents\\\\file amiroh\\\\graphql-query-apollo\\\\graphql-query-apollo-task\\\\src\\\\component\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PassengerInput from './PassengerInput';\nimport ListPassenger from './ListPassenger';\nimport Header from './Header';\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nimport Loader from \"react-loader-spinner\";\nimport GetPassengerBy from \"./GetPassengerBy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetAllPassenger = gql`\nquery MyQuery {\n    passenger {\n      id\n      nama\n      jenisKelamin\n      umur\n    }\n  }`;\nconst DeleteById = gql`\nmutation MyMutation($id: Int!) {\n    delete_passenger_by_pk(id: $id) {\n    nama\n    umur\n    }\n}  \n`;\nconst AddData = gql`\nmutation MyMutation2($object: passenger_insert_input = {}) {\n    insert_passenger_one(object: $object){\n      id\n    }\n  }\n`;\nconst GetDataById = gql`\nquery MyQuery2($id: Int!) {\n    passenger(where: {id: {_eq: $id}}) {\n      id\n      nama\n      umur\n    }\n  }\n\n`;\nconst UpdateById = gql`\nmutation UpdateById($update: passenger_set_input = {}, $id: Int!) {\n    update_passenger(where: {id:{_eq: $id}}, _set: $update) {\n      returning {\n        id\n        nama\n        umur\n      }\n    }\n  }\n`;\n\nfunction Home() {\n  _s();\n\n  const [getData, {\n    data,\n    loading,\n    error\n  }] = useLazyQuery(GetAllPassenger);\n  const [searchDataById, {\n    data: singleData,\n    loading: load,\n    error: err\n  }] = useLazyQuery(GetDataById);\n  const [deletePassenger] = useMutation(DeleteById, {\n    refetchQueries: [GetAllPassenger]\n  });\n  const [editPassenger] = useMutation(UpdateById, {\n    refetchQueries: [GetAllPassenger]\n  });\n  const [AddNewData] = useMutation(AddData, {\n    refetchQueries: [GetAllPassenger]\n  });\n  const [dataPassengerById, setDataPassengerById] = useState(\"\");\n  useEffect(() => {\n    getData();\n  }, [data]);\n  useEffect(() => {\n    console.log(\"dataPassByID useState\", dataPassengerById);\n\n    if (!load) {\n      setDataPassengerById(singleData === null || singleData === void 0 ? void 0 : singleData.passenger);\n    }\n  }, [load, singleData]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      height: 100,\n      width: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    console.log(\"error : \", error);\n    return null;\n  }\n\n  if (load) {\n    console.log(\"loading get single data\");\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      height: 100,\n      width: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (err) {\n    console.log(\"error : \", error);\n    return null;\n  }\n\n  const hapusPengunjung = id => {\n    deletePassenger({\n      variables: {\n        id\n      }\n    });\n  };\n\n  const editPengunjung = (id, update) => {\n    editPassenger({\n      variables: {\n        id,\n        update\n      }\n    });\n  };\n\n  const tambahPengunjung = newUser => {\n    AddNewData({\n      variables: {\n        object: newUser\n      }\n    });\n  };\n\n  const cariPengunjung = id => {\n    console.log(\"cari pengunjung func\", id);\n    searchDataById({\n      variables: {\n        id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GetPassengerBy, {\n      cariPengunjung: cariPengunjung,\n      data: dataPassengerById,\n      loading: load\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      height: 100,\n      width: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(ListPassenger, {\n      data: data === null || data === void 0 ? void 0 : data.passenger,\n      hapusPengunjung: hapusPengunjung\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 79\n    }, this), /*#__PURE__*/_jsxDEV(PassengerInput, {\n      tambahPengunjung: tambahPengunjung\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n} // function Homee(){\n//     const {data, loading, error}=useQuery(GetAllPassenger)\n//     return(\n//         <div>\n//             <h1>{JSON.stringify(data)}</h1>\n//         </div>\n//     )\n// }\n\n\n_s(Home, \"gc6KkSQh6TT6RWK4KtEtE5uCY1M=\", false, function () {\n  return [useLazyQuery, useLazyQuery, useMutation, useMutation, useMutation];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/hamid/Documents/file amiroh/graphql-query-apollo/graphql-query-apollo-task/src/component/Home.js"],"names":["Component","useState","useEffect","v4","uuidv4","PassengerInput","ListPassenger","Header","gql","useMutation","useLazyQuery","Loader","GetPassengerBy","GetAllPassenger","DeleteById","AddData","GetDataById","UpdateById","Home","getData","data","loading","error","searchDataById","singleData","load","err","deletePassenger","refetchQueries","editPassenger","AddNewData","dataPassengerById","setDataPassengerById","console","log","passenger","hapusPengunjung","id","variables","editPengunjung","update","tambahPengunjung","newUser","object","cariPengunjung"],"mappings":"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","sourcesContent":["import { Component,useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PassengerInput from './PassengerInput';\r\nimport ListPassenger from './ListPassenger';\r\nimport Header from './Header';\r\nimport {gql, useMutation, useLazyQuery} from \"@apollo/client\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport GetPassengerBy from \"./GetPassengerBy\";\r\n\r\nconst GetAllPassenger=gql`\r\nquery MyQuery {\r\n    passenger {\r\n      id\r\n      nama\r\n      jenisKelamin\r\n      umur\r\n    }\r\n  }`\r\n\r\nconst DeleteById=gql`\r\nmutation MyMutation($id: Int!) {\r\n    delete_passenger_by_pk(id: $id) {\r\n    nama\r\n    umur\r\n    }\r\n}  \r\n`\r\nconst AddData=gql`\r\nmutation MyMutation2($object: passenger_insert_input = {}) {\r\n    insert_passenger_one(object: $object){\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst GetDataById=gql`\r\nquery MyQuery2($id: Int!) {\r\n    passenger(where: {id: {_eq: $id}}) {\r\n      id\r\n      nama\r\n      umur\r\n    }\r\n  }\r\n\r\n`\r\n\r\nconst UpdateById=gql`\r\nmutation UpdateById($update: passenger_set_input = {}, $id: Int!) {\r\n    update_passenger(where: {id:{_eq: $id}}, _set: $update) {\r\n      returning {\r\n        id\r\n        nama\r\n        umur\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Home(){\r\n    const [getData,{data, loading, error}]=useLazyQuery(GetAllPassenger);\r\n    const [searchDataById,{data:singleData, loading:load, error:err}]=useLazyQuery(GetDataById);\r\n    const [deletePassenger] = useMutation(DeleteById, { refetchQueries: [GetAllPassenger] })\r\n    const [editPassenger] = useMutation(UpdateById, { refetchQueries: [GetAllPassenger] })\r\n    const [AddNewData] = useMutation(AddData, { refetchQueries: [GetAllPassenger] })\r\n    const [dataPassengerById, setDataPassengerById] =useState(\"\")\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    },[data])\r\n\r\n    useEffect(() => {\r\n        console.log(\"dataPassByID useState\", dataPassengerById)\r\n        if (!load) {\r\n            setDataPassengerById(singleData?.passenger)\r\n        }\r\n    }, [load, singleData])\r\n    \r\n    if (loading){\r\n        return <Loader type=\"ThreeDots\" height={100} width={100} />\r\n    }\r\n    if (error){\r\n        console.log(\"error : \",error)\r\n        return null\r\n    }\r\n    \r\n        \r\n    if (load){\r\n        console.log(\"loading get single data\")\r\n        return <Loader type=\"ThreeDots\" height={100} width={100} />\r\n\r\n    }\r\n    if (err){\r\n        console.log(\"error : \",error)\r\n        return null\r\n    }\r\n    const hapusPengunjung = (id) => {\r\n        deletePassenger({\r\n            variables:{\r\n                id\r\n            }\r\n        })\r\n    }\r\n\r\n    const editPengunjung=(id,update)=>{\r\n        editPassenger({\r\n            variables:{\r\n                id,\r\n                update\r\n            }\r\n        }\r\n        )\r\n\r\n    }\r\n\r\n    const tambahPengunjung = newUser => {\r\n\r\n        AddNewData({\r\n            variables:{\r\n                object:newUser\r\n                \r\n            }\r\n        })\r\n    };\r\n\r\n    const cariPengunjung=(id)=>{\r\n        console.log(\"cari pengunjung func\", id)\r\n        searchDataById({\r\n            variables:{\r\n                id\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            {/* <h1>{ListPassenger}</h1> */}\r\n            {/* <p>\"data by search :\",{JSON.stringify(singleData?.passenger)}</p> */}\r\n            <GetPassengerBy cariPengunjung={cariPengunjung} data={dataPassengerById} loading={load}/>\r\n            {loading ? <Loader type=\"ThreeDots\" height={100} width={100} /> : <ListPassenger data={data?.passenger} hapusPengunjung={hapusPengunjung}/>\r\n            }\r\n            <PassengerInput\r\n                tambahPengunjung={tambahPengunjung}\r\n            />\r\n        </div>\r\n        )\r\n}\r\n\r\n// function Homee(){\r\n//     const {data, loading, error}=useQuery(GetAllPassenger)\r\n//     return(\r\n//         <div>\r\n//             <h1>{JSON.stringify(data)}</h1>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}