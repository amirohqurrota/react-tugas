{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamid\\\\Documents\\\\file amiroh\\\\graphql-query-apollo\\\\GrapQL_Query_task_starter\\\\src\\\\component\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PassengerInput from './PassengerInput';\nimport ListPassenger from './ListPassenger';\nimport Header from './Header';\nimport { gql, useQuery, useLazyQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetAllPassenger = gql`\nquery MyQuery {\n    passenger {\n      nama\n      jenisKelamin\n      umur\n    }\n  }`;\nconst listData = [{\n  id: uuidv4(),\n  nama: 'Yoga',\n  umur: 22,\n  jenisKelamin: 'Pria'\n}, {\n  id: uuidv4(),\n  nama: 'Ria',\n  umur: 19,\n  jenisKelamin: 'Wanita'\n}, {\n  id: uuidv4(),\n  nama: 'Fahmi',\n  umur: 25,\n  jenisKelamin: 'Pria'\n}, {\n  id: uuidv4(),\n  nama: 'Lala',\n  umur: 21,\n  jenisKelamin: 'Wanita'\n}, {\n  id: uuidv4(),\n  nama: 'Ivan',\n  umur: 25,\n  jenisKelamin: 'Pria'\n}];\n\nfunction Home() {\n  _s();\n\n  var _data3;\n\n  const [getData, {\n    data,\n    loading,\n    error\n  }] = useLazyQuery(GetAllPassenger);\n  const {\n    dataa,\n    load,\n    err\n  } = useQuery(GetAllPassenger);\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    var _data, _data2;\n\n    getData();\n    setList((_data = data) === null || _data === void 0 ? void 0 : _data.passenger);\n    console.log(\"useEffect runnig\", (_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.passenger);\n  }, []);\n\n  if (loading) {\n    console.log(\"loading...\");\n  }\n\n  if (error) {\n    console.log(\"error : \", error);\n    return null;\n  }\n\n  const hapusPengunjung = id => {\n    const newData = [...data.passenger.filter(item => {\n      return item.id !== id;\n    })];\n    data = newData;\n  }; // const tambahPengunjung = newUser => {\n  //     const newData = {\n  //         id: uuidv4(),\n  //         ...newUser\n  //     }; \n  //     setData([...data,newData])\n  // };\n\n\n  console.log(\"listt: \", list);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify((_data3 = data) === null || _data3 === void 0 ? void 0 : _data3.passenger)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListPassenger, {\n      data: dataa === null || dataa === void 0 ? void 0 : dataa.passenger // hapusPengunjung={hapusPengunjung}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PassengerInput // tambahPengunjung={tambahPengunjung}\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n} // function Homee(){\n//     const {data, loading, error}=useQuery(GetAllPassenger)\n//     return(\n//         <div>\n//             <h1>{JSON.stringify(data)}</h1>\n//         </div>\n//     )\n// }\n\n\n_s(Home, \"xFpwoet+SFffxVGHBZOte4kiW38=\", false, function () {\n  return [useLazyQuery, useQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/hamid/Documents/file amiroh/graphql-query-apollo/GrapQL_Query_task_starter/src/component/Home.js"],"names":["Component","useState","useEffect","v4","uuidv4","PassengerInput","ListPassenger","Header","gql","useQuery","useLazyQuery","GetAllPassenger","listData","id","nama","umur","jenisKelamin","Home","getData","data","loading","error","dataa","load","err","list","setList","passenger","console","log","hapusPengunjung","newData","filter","item","JSON","stringify"],"mappings":"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","sourcesContent":["import { Component,useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PassengerInput from './PassengerInput';\r\nimport ListPassenger from './ListPassenger';\r\nimport Header from './Header';\r\nimport {gql, useQuery, useLazyQuery} from \"@apollo/client\";\r\n\r\nconst GetAllPassenger=gql`\r\nquery MyQuery {\r\n    passenger {\r\n      nama\r\n      jenisKelamin\r\n      umur\r\n    }\r\n  }`\r\n\r\nconst listData = [\r\n    {\r\n        id: uuidv4(),\r\n        nama: 'Yoga',\r\n        umur: 22,\r\n        jenisKelamin: 'Pria'\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        nama: 'Ria',\r\n        umur: 19,\r\n        jenisKelamin: 'Wanita'\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        nama: 'Fahmi',\r\n        umur: 25,\r\n        jenisKelamin: 'Pria'\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        nama: 'Lala',\r\n        umur: 21,\r\n        jenisKelamin: 'Wanita'\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        nama: 'Ivan',\r\n        umur: 25,\r\n        jenisKelamin: 'Pria'\r\n    }\r\n    ]\r\n\r\nfunction Home(){\r\n    const [getData,{data, loading, error}]=useLazyQuery(GetAllPassenger);\r\n    const {dataa, load, err}=useQuery(GetAllPassenger);\r\n    const [list, setList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        setList(data?.passenger)\r\n        console.log(\"useEffect runnig\", data?.passenger)\r\n    }, [])\r\n    \r\n    \r\n    if (loading){\r\n        console.log(\"loading...\")\r\n    }\r\n    if (error){\r\n        console.log(\"error : \",error)\r\n        return null\r\n    }\r\n    \r\n    const hapusPengunjung = id => {\r\n        const newData=[...data.passenger.filter((item)=>{\r\n            return item.id !== id;\r\n        })]\r\n        data=newData\r\n    }\r\n    \r\n    \r\n    // const tambahPengunjung = newUser => {\r\n    //     const newData = {\r\n    //         id: uuidv4(),\r\n    //         ...newUser\r\n    //     }; \r\n    //     setData([...data,newData])\r\n    // };\r\n    console.log(\"listt: \", list)\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <h1>{list}</h1>\r\n            <p>{JSON.stringify(data?.passenger)}</p>\r\n            <ListPassenger \r\n                data={dataa?.passenger}\r\n                // hapusPengunjung={hapusPengunjung}\r\n            />\r\n            <PassengerInput\r\n                // tambahPengunjung={tambahPengunjung}\r\n            />\r\n        </div>\r\n        )\r\n}\r\n\r\n// function Homee(){\r\n//     const {data, loading, error}=useQuery(GetAllPassenger)\r\n//     return(\r\n//         <div>\r\n//             <h1>{JSON.stringify(data)}</h1>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}